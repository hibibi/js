CHANGE LOG : GREENSOCK TWEENING PLATFORM
----------------------------------------

2012-05-17
---------------------------------------------
	- Added ability for CSSPlugin to recognize the key word "center" within a transformOrigin value
	- Fixed issue in IE8/7/6 that could cause rotations to change the width of the target slightly after a few rotations
	- You can now define a window.GreenSockAMDPath variable (a string) that will get prepended to GreenSock-related AMD define() calls. So, for example, if you put the GreenSock .js files in a libs/greensock/ directory, you can set window.GreenSockAMDPath = "libs/greensock" so that when TweenMax is loaded, its definition will be "libs/greensock/TweenMax" instead of simply "TweenMax". This helps to make things compatible with systems like Dojo.
	- Added ScrollToPlugin
	- Changed behavior when AMD loader like RequireJS or Dojo is found - previously if one was found, the main classes like TweenLite, TweenMax, Power1, strong, etc. were NOT added to the global scope (window). However, since Dojo uses a different define() technique that appears to require only one define() per file which would fail, we now always add the main classes to the global scope so that they can be used regardless. Also added a line of code that looks for a window.GreenSockGlobals and if one is found, it will add all the globals to that object instead of window, thus you can easily control where the globals go. For example, set window.GreenSockGlobals = {} before loading any GreenSock files and none of the GreenSock code will "pollute" the global scope - they will be added to your custom object instead. 
	- Fixed missing "var" in TweenPlugin's _addTween() method
	- Changed name of the internally-used _gsRequre() method to _gsDefine() but that shouldn't affect any code you wrote because it isn't intended to be a public method. Please make sure you update ALL of your GreenSock js files, however, because they all reference that method.

2012-05-15
---------------------------------------------
	- Worked around a bug in Chrome that could cause odd transform results when the values hit no transform (translate(0px,0px) scale(1,1) rotate(0) skew(0,0)). Apparently it's a bad idea to set transform to "" after it has been something else.

2012-05-11
---------------------------------------------
	- Fixed issue that caused skewY values in CSSPlugin to always be treated as relative. So, for example, if you tweened skewY to 10 and then did another skewY of the same object to 10, it would end up looking like 20.


2012-05-06
---------------------------------------------
	- Fixed issue that could cause jQuery objects not to be tweened properly if the page was subloaded by another page that used jQuery (thus the global jQuery object reference was updated, throwing off detection of jQuery instances using instanceof).

2012-05-03
----------------------------------------------
	- Fixed issue that could cause autoAlpha not to function properly in IE7 and IE8 (due to browser bugs)

2012-05-01
----------------------------------------------
	- Added static set() method to TweenLite and TweenMax (a simple way to do a zero-duration tween)
	- Added a new getLabelsArray() method to TimelineMax
	- Fixed issue that caused a relative CSS tween to jump to its end value right away when the starting value matched exactly the amount of relative change (very rare). 

2012-04-26
----------------------------------------------
	- Improved compatibility with jQuery so that you can pass an array of jQuery instances as the target of a tween (previously you could pass a jQuery object as the target, but not an array of them). 

2012-04-23
----------------------------------------------
	- Fixed compatibility issue with RequireJS

2012-04-10
----------------------------------------------
beta 1.02
	- Added ability to tween backgroundPosition
	- Added ability to tween "border" (like border:"5px solid red")
	- Worked around Safari bug that caused "top" and "left" changes to be ignored when they are tweened at the same time as transform values (like rotation or scaleX, etc.)
	- Fixed occasional [very slight] misrendering of what should be rotation of 0 (if rounding errors caused it to be extremely small, it could appear slightly askew previously).
	- Changed behavior so that tweens with a duration of 0 and delay of 0 will default to immediateRender:true